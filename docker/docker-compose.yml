version: '3.8'

services:
  gitingest-mcp:
    # 使用你指定的镜像名称和标签
    image: hotwa/gitingest-mcp:latest
    # 构建指令，告诉 Docker Compose 如何构建镜像
    # context: . 表示 Dockerfile 在当前目录下
    # dockerfile: Dockerfile 指定 Dockerfile 的名称 (如果不是默认的 Dockerfile)
    build:
      context: .
      dockerfile: Dockerfile # 如果你的 Dockerfile 名称就是 "Dockerfile"，这行可以省略
    # 端口映射：将主机的 8000 端口映射到容器的 8000 端口
    # 容器内的端口 (冒号右边) 应该与你在 server.py 中 mcp.run 指定的端口一致
    ports:
      - "8002:8002"
    # 给容器一个友好的名称 (可选)
    container_name: gitingest_mcp_server
    # 重启策略：除非手动停止，否则容器总是会尝试重启
    restart: unless-stopped
    # (可选) 环境变量，例如，如果你的应用需要配置
    environment:
      - PYTHONUNBUFFERED=1 # 确保 Python 日志直接输出，方便调试
      - MCP_HOST=0.0.0.0
      - MCP_PORT=8002
    # (可选) 如果你的应用需要访问本地文件或持久化数据，可以配置 volumes
    # volumes:
    #   - ./some_local_data:/app/data